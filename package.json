{
  "name": "openpilot-workbench",
  "productName": "Workbench",
  "description": "The Openpilot Workbench is to help people fix problems with EON, Openpilot, etc.",
  "scripts": {
    "clean": "rm -rf node_modules && rm -rf app/node_modules && rm -f ./package-lock.json && rm -f ./app/package-lock.json && rm -f ./yarn.lock && rm -f ./app/yarn.lock && npm cache clear --force",
    "setup": "npm install --zmq-external; cd app/ && npm install --zmq-external  && cd ../",
    "build": "concurrently \"npm run build-main\" \"npm run build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development node --trace-warnings -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.renderer.dev.dll.js --colors",
    "build-main": "cross-env NODE_ENV=production node --trace-warnings -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.main.prod.js --colors",
    "build-renderer": "cross-env NODE_ENV=production node --trace-warnings -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.renderer.prod.js --colors",
    "dev": "cross-env START_HOT=1 START_MINIMIZED=true node -r babel-register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 npm run start-renderer-dev",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "lint": "cross-env NODE_ENV=development eslint --cache --fix --format=node_modules/eslint-formatter-pretty .",
    "lint-fix": "npm install --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "npm install --silent lint-styles --fix; exit 0",
    "package": "cross-env NODE_ENV=production npm run build && electron-builder build --publish never",
    "package-all": "cross-env NODE_ENV=production npm run build && electron-builder build -mwl",
    "package-linux": "cross-env NODE_ENV=production npm run build && electron-builder build --linux",
    "package-win": "cross-env NODE_ENV=production npm run build && electron-builder build --win --x64",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.js'",
    "precommit": "lint-staged",
    "prestart": "npm run build",
    "start": "cross-env NODE_ENV=production electron ./app/",
    "start-main-dev": "cross-env HOT=1 NODE_ENV=development electron -r babel-register ./app/main.dev.js",
    "start-renderer-dev": "cross-env NODE_ENV=development node --trace-warnings -r babel-register ./node_modules/webpack-dev-server/bin/webpack-dev-server --config webpack.config.renderer.dev.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 node --trace-warnings -r babel-register ./internals/scripts/RunTests.js",
    "test-all": "npm run lint && npm run build && npm run test && npm run test-e2e",
    "test-e2e": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 node --trace-warnings -r babel-register ./internals/scripts/RunTests.js e2e",
    "test-watch": "npm run test --watch",
    "release": "cross-env NODE_ENV=production npm run build && electron-builder build --publish always",
    "release-all": "cross-env NODE_ENV=production npm run build && electron-builder build -mwl --publish always",
    "release-linux": "cross-env NODE_ENV=production npm run build && electron-builder build --linux --publish always",
    "release-win": "cross-env NODE_ENV=production npm run build && electron-builder build --win --x64 --publish always"
  },
  "browserslist": "electron 1.6",
  "lint-staged": {
    "*.(js|jsx)": [
      "cross-env NODE_ENV=development eslint --cache --format=node_modules/eslint-formatter-pretty",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.(json|css|scss|md)|.(babelrc|prettierrc|eslintrc)": [
      "prettier --ignore-path .eslintignore --write",
      "git add"
    ]
  },
  "build": {
    "productName": "Workbench",
    "appId": "ai.opc.workbench",
    "artifactName": "Workbench-v${version}.${os}.${ext}",
    "files": [
      "dist/",
      "node_modules/",
      "app.html",
      "main.prod.js",
      "main.prod.js.map",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "openpilot-community",
      "repo": "workbench",
      "private": false
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/openpilot-community/workbench.git"
  },
  "author": {
    "name": "jfrux",
    "email": "support@opc.ai",
    "url": "https://github.com/jfrux"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/openpilot-community/workbench/issues"
  },
  "keywords": [
    "openpilot",
    "commaai",
    "eon",
    "dashboard",
    "manager",
    "helper",
    "toolkit",
    "toolbelt",
    "manager"
  ],
  "homepage": "https://github.com/openpilot-community/workbench#readme",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "transform": {
      "^.+\\.js$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuiltsExist.js"
    ]
  },
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-eslint": "^8.2.6",
    "babel-jest": "^23.4.2",
    "babel-loader": "^7.1.5",
    "babel-plugin-add-module-exports": "^1.0.0",
    "babel-plugin-dev-expression": "^0.2.1",
    "babel-plugin-inline-react-svg": "^0.5.4",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-es2015-classes": "^6.24.1",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babel-preset-react-optimize": "^1.0.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "chalk": "^2.4.1",
    "concurrently": "^3.6.1",
    "cross-env": "^5.2.0",
    "cross-spawn": "^6.0.5",
    "css-loader": "^1.0.0",
    "detect-port": "^1.2.3",
    "electron": "^2.0.6",
    "electron-devtools-installer": "^2.2.4",
    "electron-rebuild": "^1.8.2",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "enzyme-to-json": "^3.3.4",
    "eslint": "^5.2.0",
    "eslint-config-airbnb": "^17.0.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-formatter-pretty": "^1.3.0",
    "eslint-import-resolver-webpack": "^0.10.1",
    "eslint-plugin-compat": "^2.5.1",
    "eslint-plugin-import": "^2.13.0",
    "eslint-plugin-jest": "^21.18.0",
    "eslint-plugin-jsx-a11y": "6.1.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-react": "^7.10.0",
    "express": "^4.16.4",
    "fbjs-scripts": "^0.8.3",
    "file-loader": "^1.1.11",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^23.4.2",
    "js-yaml-loader": "^1.0.1",
    "lint-staged": "^7.3.0",
    "mini-css-extract-plugin": "^0.4.1",
    "minimist": "^1.2.0",
    "node-loader": "^0.6.0",
    "node-sass": "^4.9.2",
    "npm-logical-tree": "^1.2.1",
    "optimize-css-assets-webpack-plugin": "^5.0.0",
    "prettier": "^1.14.0",
    "react-test-renderer": "^16.4.1",
    "redux-logger": "^3.0.6",
    "rimraf": "^2.6.2",
    "sass-loader": "^7.0.3",
    "sinon": "^6.1.4",
    "spectron": "^3.8.0",
    "style-loader": "^0.21.0",
    "stylelint": "^9.4.0",
    "stylelint-config-standard": "^18.2.0",
    "uglifyjs-webpack-plugin": "1.2.7",
    "url-loader": "^1.0.1",
    "wastedrendersdetector": "^2.0.0",
    "webpack": "^4.16.3",
    "webpack-bundle-analyzer": "^2.13.1",
    "webpack-cli": "^3.1.2",
    "webpack-dev-server": "^3.1.14",
    "webpack-merge": "^4.1.3",
    "yarn": "^1.9.2"
  },
  "dependencies": {
    "@blueprintjs/core": "^3.13.0",
    "@blueprintjs/icons": "^3.6.0",
    "@commaai/log_reader": "^0.5.1",
    "@fortawesome/fontawesome-free": "^5.7.1",
    "@fortawesome/fontawesome-svg-core": "^1.2.14",
    "@fortawesome/free-brands-svg-icons": "^5.7.1",
    "@fortawesome/free-solid-svg-icons": "^5.7.1",
    "@fortawesome/react-fontawesome": "^0.1.4",
    "@uifabric/file-type-icons": "^6.4.1",
    "JSONStream": "^1.3.2",
    "ap": "^0.2.0",
    "arpping": "^0.1.5",
    "array-sort": "^1.0.0",
    "bootstrap": "^4.1.3",
    "capnp-json": "^0.1.3",
    "capnp-split": "^0.1.4",
    "capnp-ts": "^0.4.0",
    "color": "^3.1.0",
    "command-exists": "^1.2.8",
    "connected-react-router": "^4.5.0",
    "d3": "^5.9.1",
    "devtron": "^1.4.0",
    "dot-prop-immutable": "^1.4.0",
    "easy-zip2": "^2.0.0",
    "electron-builder": "^20.28.4",
    "electron-builder-squirrel-windows": "^20.28.3",
    "electron-config": "^1.0.0",
    "electron-context-menu": "^0.10.0",
    "electron-debug": "^2.0.0",
    "electron-fetch": "^1.2.1",
    "electron-google-analytics": "^0.1.0",
    "electron-is-dev": "^1.0.1",
    "electron-log": "^3.0.1",
    "electron-prompt": "^1.2.0",
    "electron-react-devtools": "^0.5.3",
    "electron-react-titlebar": "^0.8.1",
    "electron-remote": "^1.3.0",
    "electron-settings": "^3.2.0",
    "electron-squirrel-startup": "^1.0.0",
    "electron-updater": "^3.1.2",
    "evilscan": "^1.7.1",
    "express-ws": "^4.0.0",
    "find-free-port": "^2.0.0",
    "get-port": "^4.1.0",
    "geval": "^2.2.0",
    "git-describe": "^4.0.3",
    "hexdump-nodejs": "^0.1.0",
    "history": "^4.7.2",
    "hls.js": "^0.11.0",
    "http": "^0.0.0",
    "humanize-duration": "^3.15.3",
    "immutability-helper": "^2.8.1",
    "inflection": "^1.12.0",
    "inquirer": "^6.2.0",
    "ip": "^1.1.5",
    "iprange": "^0.1.0",
    "is-port-reachable": "^2.0.0",
    "jquery": "^3.3.1",
    "json2csv": "^4.2.1",
    "local-devices": "^1.1.1",
    "lodash.throttle": "^4.1.1",
    "mkdirp": "^0.5.1",
    "moment": "^2.22.2",
    "moment-timezone": "^0.5.35",
    "network-list": "^1.1.5",
    "node-arp": "^1.0.6",
    "node-cidr": "^1.0.0",
    "node-cmd": "^3.0.0",
    "node-ssh": "^5.1.2",
    "office-ui-fabric-react": "^6.139.0",
    "popper.js": "^1.14.4",
    "react": "^16.4.1",
    "react-dom": "^16.4.1",
    "react-extras": "^0.9.0",
    "react-hot-loader": "^4.3.4",
    "react-input-mask": "^2.0.4",
    "react-json-pretty": "^1.7.9",
    "react-json-view": "^1.19.1",
    "react-lazy-load": "^3.0.13",
    "react-list": "^0.8.11",
    "react-measure": "^2.2.4",
    "react-moment": "^0.8.1",
    "react-monaco-editor": "0.14.1",
    "react-redux": "^5.0.7",
    "react-resize-detector": "^3.1.2",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "react-router-redux": "^5.0.0-alpha.6",
    "react-split-pane": "^0.1.85",
    "react-textarea-autosize": "^7.0.4",
    "react-virtualized": "^9.21.0",
    "reactstrap": "^6.4.0",
    "redux": "^4.0.0",
    "redux-electron-ipc": "^1.1.13",
    "redux-persist": "^5.10.0",
    "redux-saga": "^0.16.0",
    "redux-thunk": "^2.3.0",
    "reselect": "^4.0.0",
    "rsa-key": "^0.0.6",
    "seamless-immutable": "^7.1.4",
    "smalltalk": "^3.2.0",
    "socket.io": "^2.2.0",
    "socket.io-client": "^2.2.0",
    "source-map-support": "^0.5.6",
    "ssh2": "^0.6.1",
    "ssh2-sftp-client": "^2.4.3",
    "stream-selector": "^0.4.0",
    "stream-to-string": "^1.2.0",
    "threads": "^0.12.1",
    "tmp": "^0.0.33",
    "toml": "^2.3.3",
    "uuid": "^3.3.2",
    "video-react": "^0.13.2",
    "winreg": "^1.2.4",
    "ws": "^6.1.4",
    "xterm": "^3.8.0",
    "yaml-loader": "^0.5.0",
    "zeromq": "^5.1.0"
  },
  "devEngines": {
    "node": ">=8.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  }
}
